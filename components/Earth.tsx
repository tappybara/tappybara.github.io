/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { FC, useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { Mesh } from 'three';

const Earth: FC<JSX.IntrinsicElements['group']> = (props) => {
    const { nodes, materials } = useGLTF('/assets/earth.gltf');

    const earth = useRef<Mesh>(null!);
    const land = useRef<Mesh>(null!);

    useFrame(({ clock }) => {
        earth.current.rotation.y = clock.getElapsedTime() / 4;
        land.current.rotation.y = clock.getElapsedTime() / 4;
    });

    return (
        <group {...props} dispose={null}>
            <ambientLight intensity={1.5} />
            <directionalLight position={[1, 2, 7]} />
            <mesh
                ref={earth}
                castShadow
                receiveShadow
                // @ts-expect-error seems to work
                geometry={nodes.mesh1519172617.geometry}
                material={materials.mat4}
            />
            <mesh
                ref={land}
                castShadow
                receiveShadow
                // @ts-expect-error seems to work
                geometry={nodes.mesh1519172617_1.geometry}
                material={materials.mat10}
            />
        </group>
    );
};

useGLTF.preload('/assets/earth.gltf');

export default Earth;
